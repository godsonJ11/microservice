server.port=8083
spring.application.name=seller
#db configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/seller
spring.datasource.password=root
spring.datasource.username=postgres
#jpa configuration
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#admin url
#application.admin.url=http://localhost:8081/api/admin
#buyer url
#application.buyer.url=http://localhost:8082/api/buyer
#spring actuator config
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#resilience 4j config
#this configuration is used when the external service is not available, and it is not responding
#at the limited time we need to handle that so resilience will give some properties
resilience4j.circuitbreaker.instances.admin.register-health-indicator=true
resilience4j.circuitbreaker.instances.admin.event-consumer-buffer-size=10
#here we have time based and percentage based
resilience4j.circuitbreaker.instances.admin.sliding-window-type=COUNT_BASED
#SLIDING_WINDOW-SIZE-------------> this properties is used to when the 5 number are failed when
# calling the other service it will convert the close state to open state
resilience4j.circuitbreaker.instances.admin.sliding-window-size=5
resilience4j.circuitbreaker.instances.admin.failure-rate-threshold=50
#after 5 fail it will convert the open state after the 15s open state is converted to half-open
# state and till the check some response also failed it will convert the state to open
# if the response is success it will convert state as closed
resilience4j.circuitbreaker.instances.admin.wait-duration-in-open-state=15s
# At the time of half open state we can send the 3 req to the other service
# if success it will convert to closed else open
resilience4j.circuitbreaker.instances.admin.permitted-number-of-calls-in-half-open-state=3
#automatically covert open to half-open
resilience4j.circuitbreaker.instances.admin.automatic-transition-from-open-to-half-open-enabled=true
#---------------------------------------------------------------------------------------------------------------------------------------------------------
#resilience 4j time limiter properties
#if the service is not send the response at the limited time of 10s
resilience4j.timelimiter.instances.admin.timeout-duration=3s
#resilience4j retry properties
resilience4j.retry.instances.admin.max-attempts=3
resilience4j.retry.instances.admin.wait-duration=5s